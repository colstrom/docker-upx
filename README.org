#+TITLE: Build Pipeline for UPX on Docker
#+LATEX_HEADER: \hypersetup{%
#+LATEX_HEADER:   pdfborder = {0 0 0}
#+LATEX_HEADER: }
#+LATEX: \pagebreak

* Overview

This repository contains a complete pipeline to build UPX on Docker.

* Usage
** Cloning the Repository

#+BEGIN_SRC shell
  git clone https://github.com/colstrom/docker-upx.git
#+END_SRC

** (Optional) Deploying Concourse with Vagrant

This pipeline is intended for deployment with [[https://concourse.ci/][Concourse]]. If you do do not have
an existing Concourse deployment, you can use the included ~Vagrantfile~ to
create one locally with ~vagrant~.

You can skip this if you already have Concourse.

#+BEGIN_SRC shell
  vagrant up
#+END_SRC

** Deploying the Pipeline

For the simplest setup, you can deploy the read-only version of this pipeline.
It is equivalent in all ways but one: it omits the final output step.

#+BEGIN_SRC shell
  fly set-pipeline --pipeline docker-upx --config ci/pipeline-read-only.yaml
#+END_SRC

The initial state of a pipeline is *paused*. You will need to *unpause* before
it does anything interesting.

#+BEGIN_SRC shell
  fly unpause-pipeline --pipeline docker-upx
#+END_SRC

** Adding Your Secrets

For the final output step to be useful, it needs somewhere to push. Since that
is an authenticated resource, you will need to supply some _secrets_ of your
own.

#+BEGIN_SRC yaml
  docker-repository: repository/image
  docker-email: user@example.local
  docker-username: YOUR-USERNAME
  docker-password: YOUR-PASSWORD
#+END_SRC

** Deploying Your Secrets (with the Pipeline)

... or the other way around, if you prefer to read it that way.

#+BEGIN_SRC shell
  fly set-pipeline --pipeline docker-upx --config ci/pipeline.yaml --load-vars-from secrets.yaml
#+END_SRC

* License

[[https://tldrlegal.com/license/mit-license][MIT License]]

* Contributors
- [[https://colstrom.github.io/][Chris Olstrom]] | [[mailto:chris@olstrom.com][e-mail]] | [[https://twitter.com/ChrisOlstrom][Twitter]]
